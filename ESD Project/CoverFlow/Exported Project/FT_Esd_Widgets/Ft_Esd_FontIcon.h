/*
This file is automatically generated
DO NOT MODIFY BY HAND
Ft_Esd_FontIcon
Header
*/

#ifndef Ft_Esd_FontIcon__H
#define Ft_Esd_FontIcon__H

#include "Esd_Base.h"
#include "Esd_Core.h"
#include "Ft_Esd.h"
#include "Ft_Esd_BitmapInfo.h"
#include "Ft_Esd_Widget.h"

#ifndef ESD_LOGIC
#define ESD_LOGIC(name, ...)
#define ESD_ACTOR(name, ...)
#define ESD_WIDGET(name, ...)
#define ESD_PAGE(name, ...)
#define ESD_APPLICATION(name, ...)
#define ESD_INPUT(name, ...)
#define ESD_ARRAY_INPUT(name, ...)
#define ESD_OUTPUT(name, ...)
#define ESD_SLOT(name, ...)
#define ESD_SIGNAL(name, ...)
#define ESD_VARIABLE(name, ...)
#define ESD_WRITER(name, ...)
#endif

#define Ft_Esd_FontIcon_CLASSID 0xF2B52747
ESD_SYMBOL(Ft_Esd_FontIcon_CLASSID, Type = esd_classid_t)

ESD_WIDGET(Ft_Esd_FontIcon, Include = "Ft_Esd_FontIcon.h", Callback, DisplayName = "ESD FontIcon", Category = EsdWidgets, Icon = ":/icons/fonticon.png", X = 0, Y = 0, Width = 128, Height = 128)
typedef struct
{
	union
	{
		void *Owner;
		Ft_Esd_Widget Widget;
	};
	ESD_VARIABLE(Color, Type = ft_argb32_t, Default = #ffffff, Public)
	ft_argb32_t Color;
	ESD_INPUT(BitmapCell, DisplayName = "Bitmap Cell", Type = Ft_Esd_BitmapCell)
	Ft_Esd_BitmapCell(* BitmapCell)(void *context);
	ESD_VARIABLE(FontIcon, DisplayName = "Font Icon", Type = esd_fonticon_t, Default = "f3a2-brands", Public)
	esd_fonticon_t FontIcon;
	ESD_VARIABLE(Align, Type = Esd_Align, Default = ESD_ALIGN_TOPLEFT, Public)
	uint8_t Align;
	ESD_VARIABLE(Scaling, Type = Esd_Scaling, Default = ESD_SCALING_FIT, Public)
	uint8_t Scaling;
	ESD_VARIABLE(AutoResize, Type = Esd_AutoResize, Default = ESD_AUTORESIZE_BOTH, Public)
	ft_uint8_t AutoResize;
	ESD_VARIABLE(ScaleX, Type = ft_int32_f16_t, Default = 1, Public)
	ft_int32_f16_t ScaleX;
	ESD_VARIABLE(ScaleY, Type = ft_int32_f16_t, Default = 1, Public)
	ft_int32_f16_t ScaleY;
	/* Minimum Alpha Filter */
	ESD_INPUT(MinAlpha, DisplayName = "AlphaFilter", Type = ft_uint8_t, Min = 0, Max = 255, Default = 1)
	ft_uint8_t(* MinAlpha)(void *context);
} Ft_Esd_FontIcon;

void Ft_Esd_FontIcon__Initializer(Ft_Esd_FontIcon *context);

ESD_SLOT(Render)
void Ft_Esd_FontIcon_Render(Ft_Esd_FontIcon *context);

#endif /* Ft_Esd_FontIcon__H */

/* end of file */
