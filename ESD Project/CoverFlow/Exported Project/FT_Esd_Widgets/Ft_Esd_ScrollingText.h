/*
This file is automatically generated
DO NOT MODIFY BY HAND
Ft_Esd_ScrollingText
Header
*/

#ifndef Ft_Esd_ScrollingText__H
#define Ft_Esd_ScrollingText__H

#include "Esd_Base.h"
#include "Esd_Core.h"
#include "Esd_FontInfo.h"
#include "Ft_Esd.h"
#include "Ft_Esd_Label.h"
#include "Ft_Esd_Layout_Fixed.h"
#include "Ft_Esd_Math.h"
#include "Ft_Esd_Theme.h"
#include "Ft_Esd_Widget.h"

#ifndef ESD_LOGIC
#define ESD_LOGIC(name, ...)
#define ESD_ACTOR(name, ...)
#define ESD_WIDGET(name, ...)
#define ESD_PAGE(name, ...)
#define ESD_APPLICATION(name, ...)
#define ESD_INPUT(name, ...)
#define ESD_ARRAY_INPUT(name, ...)
#define ESD_OUTPUT(name, ...)
#define ESD_SLOT(name, ...)
#define ESD_SIGNAL(name, ...)
#define ESD_VARIABLE(name, ...)
#define ESD_WRITER(name, ...)
#endif

#define Ft_Esd_ScrollingText_CLASSID 0xE1DD30EF
ESD_SYMBOL(Ft_Esd_ScrollingText_CLASSID, Type = esd_classid_t)

/* Scrolling Text based left to right and right to left */
ESD_WIDGET(Ft_Esd_ScrollingText, Include = "Ft_Esd_ScrollingText.h", Callback, DisplayName = "ESD Scrolling Text", Category = EsdWidgets, Icon = ":/icons/ui-label.png", X = -2, Y = 0, Width = 320, Height = 37, BackToFront)
typedef struct
{
	union
	{
		void *Owner;
		Ft_Esd_Widget Widget;
	};
	ESD_VARIABLE(GlobalX, Type = int, Private)
	int GlobalX;
	ESD_VARIABLE(Theme, Type = Ft_Esd_Theme *, Default = Ft_Esd_Theme_GetCurrent, Public)
	Ft_Esd_Theme * Theme;
	ESD_VARIABLE(Variable_2, Type = int, Private)
	int Variable_2;
	ESD_VARIABLE(Font_Resource, Type = Esd_FontInfo *, Public)
	Esd_FontInfo * Font_Resource;
	ESD_VARIABLE(Font, Type = int, Default = 28, Public)
	int Font;
	ESD_VARIABLE(Text, Type = const char *, Default = "Welcome to EVE Screen Designer", Public)
	const char * Text;
	ESD_VARIABLE(Position, Type = Esd_ScrollText, Default = NONE, Public)
	int Position;
	ESD_VARIABLE(Speed, Type = int, Min = 1, Max = 10, SingleStep = 1, Default = 1, Public)
	int Speed;
	Ft_Esd_Layout_Fixed Fixed_Positioning;
	Ft_Esd_Label ESD_Label;
} Ft_Esd_ScrollingText;

void Ft_Esd_ScrollingText__Initializer(Ft_Esd_ScrollingText *context);

ESD_SLOT(End)
void Ft_Esd_ScrollingText_End(Ft_Esd_ScrollingText *context);

ESD_SLOT(Update)
void Ft_Esd_ScrollingText_Update(Ft_Esd_ScrollingText *context);

#endif /* Ft_Esd_ScrollingText__H */

/* end of file */
