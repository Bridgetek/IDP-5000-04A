/*
This file is automatically generated
DO NOT MODIFY BY HAND
Ft_Esd_CircularGradientSlider
Header
*/

#ifndef Ft_Esd_CircularGradientSlider__H
#define Ft_Esd_CircularGradientSlider__H

#include "Esd_Base.h"
#include "Ft_Esd.h"
#include "Ft_Esd_Gradient_Arc_Line.h"
#include "Ft_Esd_Math.h"
#include "Ft_Esd_TouchArea.h"
#include "Ft_Esd_Widget.h"

#ifndef ESD_LOGIC
#define ESD_LOGIC(name, ...)
#define ESD_ACTOR(name, ...)
#define ESD_WIDGET(name, ...)
#define ESD_PAGE(name, ...)
#define ESD_APPLICATION(name, ...)
#define ESD_INPUT(name, ...)
#define ESD_ARRAY_INPUT(name, ...)
#define ESD_OUTPUT(name, ...)
#define ESD_SLOT(name, ...)
#define ESD_SIGNAL(name, ...)
#define ESD_VARIABLE(name, ...)
#define ESD_WRITER(name, ...)
#endif

#define Ft_Esd_CircularGradientSlider_CLASSID 0x5FAB8232
ESD_SYMBOL(Ft_Esd_CircularGradientSlider_CLASSID, Type = esd_classid_t)

ESD_WIDGET(Ft_Esd_CircularGradientSlider, Include = "Ft_Esd_CircularGradientSlider.h", Callback, DisplayName = "ESD Circular Gradient Slider", Category = EsdWidgets, X = 9, Y = 12, Width = 414, Height = 317)
typedef struct
{
	union
	{
		void *Owner;
		Ft_Esd_Widget Widget;
	};
	ESD_VARIABLE(CPX, Type = int, Private)
	int CPX;
	ESD_VARIABLE(GetA, Type = int, Private)
	int GetA;
	ESD_VARIABLE(CPY, Type = int, Private)
	int CPY;
	ESD_VARIABLE(isClock, Type = ft_bool_t, Default = false, Private)
	ft_bool_t isClock;
	ESD_VARIABLE(Border, Type = int, Default = 40, Public)
	int Border;
	ESD_VARIABLE(Color1, Type = esd_argb32_t, Default = #ffffff, Public)
	esd_argb32_t Color1;
	ESD_VARIABLE(OriginA, Type = int, Private)
	int OriginA;
	ESD_VARIABLE(Color2, Type = esd_argb32_t, Default = #ffff00, Public)
	esd_argb32_t Color2;
	ESD_VARIABLE(Origin, Type = int, Default = 0, Public)
	int Origin;
	ESD_VARIABLE(AngleA, Type = int, Private)
	int AngleA;
	ESD_VARIABLE(Angle, Type = int, Default = 160, Public)
	int Angle;
	Ft_Esd_TouchArea Touch_Area;
	Ft_Esd_Gradient_Arc_Line ESD_Gradient_ArcLine;
} Ft_Esd_CircularGradientSlider;

void Ft_Esd_CircularGradientSlider__Initializer(Ft_Esd_CircularGradientSlider *context);

ESD_SLOT(Update)
void Ft_Esd_CircularGradientSlider_Update(Ft_Esd_CircularGradientSlider *context);

ESD_SLOT(End)
void Ft_Esd_CircularGradientSlider_End(Ft_Esd_CircularGradientSlider *context);

ESD_SLOT(Render)
void Ft_Esd_CircularGradientSlider_Render(Ft_Esd_CircularGradientSlider *context);

#endif /* Ft_Esd_CircularGradientSlider__H */

/* end of file */
