/*
This file is automatically generated
DO NOT MODIFY BY HAND
Ft_Esd_QRCode
Header
*/

#ifndef Ft_Esd_QRCode__H
#define Ft_Esd_QRCode__H

#include "Esd_Base.h"
#include "Ft_Esd.h"
#include "Ft_Esd_BitmapInfo.h"
#include "Ft_Esd_Widget.h"

#ifndef ESD_LOGIC
#define ESD_LOGIC(name, ...)
#define ESD_ACTOR(name, ...)
#define ESD_WIDGET(name, ...)
#define ESD_PAGE(name, ...)
#define ESD_APPLICATION(name, ...)
#define ESD_INPUT(name, ...)
#define ESD_ARRAY_INPUT(name, ...)
#define ESD_OUTPUT(name, ...)
#define ESD_SLOT(name, ...)
#define ESD_SIGNAL(name, ...)
#define ESD_VARIABLE(name, ...)
#define ESD_WRITER(name, ...)
#endif

#define Ft_Esd_QRCode_CLASSID 0x02F2EE60
ESD_SYMBOL(Ft_Esd_QRCode_CLASSID, Type = esd_classid_t)

ESD_WIDGET(Ft_Esd_QRCode, Include = "Ft_Esd_QRCode.h", Callback, DisplayName = "ESD QRCode", Category = EsdWidgets, Icon = ":/icons/barcode-2d.png", X = 0, Y = 0, Width = 100, Height = 100)
typedef struct
{
	union
	{
		void *Owner;
		Ft_Esd_Widget Widget;
	};
	ESD_VARIABLE(BitmapCell, Type = Ft_Esd_BitmapCell, Private)
	Ft_Esd_BitmapCell BitmapCell;
	ESD_VARIABLE(URL, Type = char *, Default = "URL", Public)
	char * URL;
	ESD_VARIABLE(BitmapInfo, Type = Ft_Esd_BitmapInfo, Private)
	Ft_Esd_BitmapInfo BitmapInfo;
	ESD_VARIABLE(LastURL, Type = char *, Private)
	char * LastURL;
	ESD_VARIABLE(Scale, Type = uint8_t, Min = 1, Default = 1, Public)
	uint8_t Scale;
} Ft_Esd_QRCode;

void Ft_Esd_QRCode__Initializer(Ft_Esd_QRCode *context);

ESD_SLOT(Render)
void Ft_Esd_QRCode_Render(Ft_Esd_QRCode *context);

ESD_SLOT(Update)
void Ft_Esd_QRCode_Update(Ft_Esd_QRCode *context);

#endif /* Ft_Esd_QRCode__H */

/* end of file */
